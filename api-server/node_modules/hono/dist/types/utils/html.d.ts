type HtmlEscapedCallbackOpts = {
    error?: Error;
    buffer?: [string];
};
export type HtmlEscapedCallback = (opts: HtmlEscapedCallbackOpts) => Promise<string>;
export type HtmlEscaped = {
    isEscaped: true;
    callbacks?: HtmlEscapedCallback[];
};
export type HtmlEscapedString = string & HtmlEscaped;
export type StringBuffer = (string | Promise<string>)[];
export declare const stringBufferToString: (buffer: StringBuffer) => Promise<HtmlEscapedString>;
export declare const escapeToBuffer: (str: string, buffer: StringBuffer) => void;
export declare const resolveStream: (str: string | HtmlEscapedString, buffer?: [string]) => Promise<string>;
export {};
